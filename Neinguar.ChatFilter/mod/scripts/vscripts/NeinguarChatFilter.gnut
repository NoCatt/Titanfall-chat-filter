global function NeinguarChatFilter_Init

void function NeinguarChatFilter_Init() {
    AddCallback_OnReceivedSayTextMessage(MyChatFilter)
}

string function GetAmoutOfStars(string word) {
    string reply = ""
    for (int a; a < word.len() ; a++ ) {
     reply + "*"
    }
    return reply
}

string function GetString(string convar){
    return GetConVarString(convar)
}
bool function GetBool(string convar){
    return GetConVarBool(convar) 
}
array<string> function GetArray(string convar){
    return split( GetConVarString(convar) ,"," )
}
float function GetFloat(string convar){
    return GetConVarFloat(convar)
}

array<string> Banned_words = GetArray("words")
bool shouldBlock = GetBool("Block")
bool shouldInform = GetBool("ShouldInformPlayer")
string ResponseOnBlock = GetString("ResponseOnBlock")
bool ShouldShamePlayer = GetBool("ShouldShameUnfriendlyPlayers")
string ShameMessage = GetString("MessageToShamePlayer")
string ResponseOnReplace = GetString("ResponseOnReplace")

ClClient_MessageStruct function MyChatFilter(ClClient_MessageStruct message) {
    string LowerMessage  = message.message.tolower()
    for(string word in Banned_words)
    {
        if( LowerMessage.find( word.tolower() ) == -1) 
            return message
        
        if(shouldBlock){
            message.shouldBlock = true
            if(shouldInform)
                Chat_ServerPrivateMessage(message.player , ResponseOnBlock , false)
            if(ShouldShamePlayer)
                Chat_Impersonate(message.player,ShameMessage,false)
            return message
        } else{
            message.message = StringReplace(LowerMessage, word.tolower(), GetAmoutOfStars(word), true, true)
            if(shouldInform)
                Chat_ServerPrivateMessage(message.player ,ResponseOnReplace   , false)
            if(ShouldShamePlayer)
                Chat_Impersonate(message.player, ShameMessage, false)
            return message
        }
    return message
    }
}